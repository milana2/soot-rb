"A" -> "java.lang.Object";
"java.io.Closeable" -> "java.io.IOException";
"java.io.Closeable" -> "java.lang.Object";
"java.io.DataInput" -> "java.io.IOException";
"java.io.DataInput" -> "java.lang.Object";
"java.io.DataInput" -> "java.lang.String";
"java.io.DataOutput" -> "java.io.IOException";
"java.io.DataOutput" -> "java.lang.Object";
"java.io.DataOutput" -> "java.lang.String";
"java.io.DataOutputStream" -> "java.io.DataOutput";
"java.io.DataOutputStream" -> "java.io.FilterOutputStream";
"java.io.DataOutputStream" -> "java.io.IOException";
"java.io.DataOutputStream" -> "java.io.OutputStream";
"java.io.DataOutputStream" -> "java.lang.String";
"java.io.Externalizable" -> "java.io.IOException";
"java.io.Externalizable" -> "java.io.ObjectInput";
"java.io.Externalizable" -> "java.io.ObjectOutput";
"java.io.Externalizable" -> "java.io.Serializable";
"java.io.Externalizable" -> "java.lang.ClassNotFoundException";
"java.io.Externalizable" -> "java.lang.Object";
"java.io.FileDescriptor" -> "java.io.SyncFailedException";
"java.io.FileDescriptor" -> "java.lang.Object";
"java.io.FileFilter" -> "java.io.File";
"java.io.FileFilter" -> "java.lang.Object";
"java.io.File" -> "java.io.FileFilter";
"java.io.File" -> "java.io.FilenameFilter";
"java.io.File" -> "java.io.FileSystem";
"java.io.File" -> "java.io.IOException";
"java.io.File" -> "java.io.ObjectInputStream";
"java.io.File" -> "java.io.ObjectOutputStream";
"java.io.File" -> "java.io.Serializable";
"java.io.File" -> "java.lang.ClassNotFoundException";
"java.io.File" -> "java.lang.Comparable";
"java.io.File" -> "java.lang.Object";
"java.io.File" -> "java.lang.SecurityManager";
"java.io.File" -> "java.lang.String";
"java.io.File" -> "java.net.MalformedURLException";
"java.io.File" -> "java.net.URI";
"java.io.File" -> "java.net.URL";
"java.io.FilenameFilter" -> "java.io.File";
"java.io.FilenameFilter" -> "java.lang.Object";
"java.io.FilenameFilter" -> "java.lang.String";
"java.io.FileNotFoundException" -> "java.io.IOException";
"java.io.FileNotFoundException" -> "java.lang.String";
"java.io.FileSystem" -> "java.io.File";
"java.io.FileSystem" -> "java.io.IOException";
"java.io.FileSystem" -> "java.lang.Object";
"java.io.FileSystem" -> "java.lang.String";
"java.io.FilterInputStream" -> "java.io.InputStream";
"java.io.FilterInputStream" -> "java.io.IOException";
"java.io.FilterOutputStream" -> "java.io.IOException";
"java.io.FilterOutputStream" -> "java.io.OutputStream";
"java.io.Flushable" -> "java.io.IOException";
"java.io.Flushable" -> "java.lang.Object";
"java.io.InputStream" -> "java.io.Closeable";
"java.io.InputStream" -> "java.io.IOException";
"java.io.InputStream" -> "java.lang.Object";
"java.io.InvalidClassException" -> "java.io.ObjectStreamException";
"java.io.InvalidClassException" -> "java.lang.String";
"java.io.InvalidObjectException" -> "java.io.ObjectStreamException";
"java.io.InvalidObjectException" -> "java.lang.String";
"java.io.IOException" -> "java.lang.Exception";
"java.io.IOException" -> "java.lang.String";
"java.io.IOException" -> "java.lang.Throwable";
"java.io.NotActiveException" -> "java.io.ObjectStreamException";
"java.io.NotActiveException" -> "java.lang.String";
"java.io.ObjectInput" -> "java.io.DataInput";
"java.io.ObjectInput" -> "java.io.IOException";
"java.io.ObjectInput" -> "java.lang.ClassNotFoundException";
"java.io.ObjectInput" -> "java.lang.Object";
"java.io.ObjectInputStream" -> "java.io.Externalizable";
"java.io.ObjectInputStream" -> "java.io.InputStream";
"java.io.ObjectInputStream" -> "java.io.InvalidObjectException";
"java.io.ObjectInputStream" -> "java.io.IOException";
"java.io.ObjectInputStream" -> "java.io.NotActiveException";
"java.io.ObjectInputStream" -> "java.io.ObjectInput";
"java.io.ObjectInputStream" -> "java.io.ObjectInputValidation";
"java.io.ObjectInputStream" -> "java.io.ObjectStreamClass";
"java.io.ObjectInputStream" -> "java.io.ObjectStreamConstants";
"java.io.ObjectInputStream" -> "java.io.StreamCorruptedException";
"java.io.ObjectInputStream" -> "java.lang.Class";
"java.io.ObjectInputStream" -> "java.lang.ClassLoader";
"java.io.ObjectInputStream" -> "java.lang.ClassNotFoundException";
"java.io.ObjectInputStream" -> "java.lang.Enum";
"java.io.ObjectInputStream" -> "java.lang.Object";
"java.io.ObjectInputStream" -> "java.lang.SecurityException";
"java.io.ObjectInputStream" -> "java.lang.String";
"java.io.ObjectInputValidation" -> "java.io.InvalidObjectException";
"java.io.ObjectInputValidation" -> "java.lang.Object";
"java.io.ObjectOutput" -> "java.io.DataOutput";
"java.io.ObjectOutput" -> "java.io.IOException";
"java.io.ObjectOutput" -> "java.lang.Object";
"java.io.ObjectOutputStream" -> "java.io.Externalizable";
"java.io.ObjectOutputStream" -> "java.io.IOException";
"java.io.ObjectOutputStream" -> "java.io.ObjectOutput";
"java.io.ObjectOutputStream" -> "java.io.ObjectStreamClass";
"java.io.ObjectOutputStream" -> "java.io.ObjectStreamConstants";
"java.io.ObjectOutputStream" -> "java.io.OutputStream";
"java.io.ObjectOutputStream" -> "java.lang.Class";
"java.io.ObjectOutputStream" -> "java.lang.Enum";
"java.io.ObjectOutputStream" -> "java.lang.Object";
"java.io.ObjectOutputStream" -> "java.lang.SecurityException";
"java.io.ObjectOutputStream" -> "java.lang.String";
"java.io.ObjectStreamClass" -> "java.io.InvalidClassException";
"java.io.ObjectStreamClass" -> "java.io.IOException";
"java.io.ObjectStreamClass" -> "java.io.ObjectInputStream";
"java.io.ObjectStreamClass" -> "java.io.ObjectOutputStream";
"java.io.ObjectStreamClass" -> "java.io.ObjectStreamField";
"java.io.ObjectStreamClass" -> "java.io.Serializable";
"java.io.ObjectStreamClass" -> "java.lang.Class";
"java.io.ObjectStreamClass" -> "java.lang.ClassNotFoundException";
"java.io.ObjectStreamClass" -> "java.lang.InstantiationException";
"java.io.ObjectStreamClass" -> "java.lang.Long";
"java.io.ObjectStreamClass" -> "java.lang.Object";
"java.io.ObjectStreamClass" -> "java.lang.reflect.Constructor";
"java.io.ObjectStreamClass" -> "java.lang.reflect.InvocationTargetException";
"java.io.ObjectStreamClass" -> "java.lang.reflect.Method";
"java.io.ObjectStreamClass" -> "java.lang.ref.ReferenceQueue";
"java.io.ObjectStreamClass" -> "java.lang.String";
"java.io.ObjectStreamClass" -> "java.lang.Throwable";
"java.io.ObjectStreamClass" -> "java.lang.UnsupportedOperationException";
"java.io.ObjectStreamClass" -> "java.util.concurrent.ConcurrentMap";
"java.io.ObjectStreamConstants" -> "java.lang.Object";
"java.io.ObjectStreamException" -> "java.io.IOException";
"java.io.ObjectStreamException" -> "java.lang.String";
"java.io.ObjectStreamField" -> "java.lang.Class";
"java.io.ObjectStreamField" -> "java.lang.Comparable";
"java.io.ObjectStreamField" -> "java.lang.Object";
"java.io.ObjectStreamField" -> "java.lang.reflect.Field";
"java.io.ObjectStreamField" -> "java.lang.String";
"java.io.OutputStream" -> "java.io.Closeable";
"java.io.OutputStream" -> "java.io.Flushable";
"java.io.OutputStream" -> "java.io.IOException";
"java.io.OutputStream" -> "java.lang.Object";
"java.io.OutputStreamWriter" -> "java.io.IOException";
"java.io.OutputStreamWriter" -> "java.io.OutputStream";
"java.io.OutputStreamWriter" -> "java.io.UnsupportedEncodingException";
"java.io.OutputStreamWriter" -> "java.io.Writer";
"java.io.OutputStreamWriter" -> "java.lang.String";
"java.io.OutputStreamWriter" -> "java.nio.charset.Charset";
"java.io.OutputStreamWriter" -> "java.nio.charset.CharsetEncoder";
"java.io.PrintStream" -> "java.io.Closeable";
"java.io.PrintStream" -> "java.io.File";
"java.io.PrintStream" -> "java.io.FileNotFoundException";
"java.io.PrintStream" -> "java.io.FilterOutputStream";
"java.io.PrintStream" -> "java.io.IOException";
"java.io.PrintStream" -> "java.io.OutputStream";
"java.io.PrintStream" -> "java.io.OutputStreamWriter";
"java.io.PrintStream" -> "java.io.UnsupportedEncodingException";
"java.io.PrintStream" -> "java.lang.Appendable";
"java.io.PrintStream" -> "java.lang.CharSequence";
"java.io.PrintStream" -> "java.lang.Object";
"java.io.PrintStream" -> "java.lang.String";
"java.io.PrintStream" -> "java.util.Locale";
"java.io.PrintWriter" -> "java.io.File";
"java.io.PrintWriter" -> "java.io.FileNotFoundException";
"java.io.PrintWriter" -> "java.io.IOException";
"java.io.PrintWriter" -> "java.io.OutputStream";
"java.io.PrintWriter" -> "java.io.UnsupportedEncodingException";
"java.io.PrintWriter" -> "java.io.Writer";
"java.io.PrintWriter" -> "java.lang.Appendable";
"java.io.PrintWriter" -> "java.lang.CharSequence";
"java.io.PrintWriter" -> "java.lang.Object";
"java.io.PrintWriter" -> "java.lang.String";
"java.io.PrintWriter" -> "java.util.Locale";
"java.io.Serializable" -> "java.lang.Object";
"java.io.StreamCorruptedException" -> "java.io.ObjectStreamException";
"java.io.StreamCorruptedException" -> "java.lang.String";
"java.io.SyncFailedException" -> "java.io.IOException";
"java.io.SyncFailedException" -> "java.lang.String";
"java.io.UnsupportedEncodingException" -> "java.io.IOException";
"java.io.UnsupportedEncodingException" -> "java.lang.String";
"java.io.Writer" -> "java.io.Closeable";
"java.io.Writer" -> "java.io.Flushable";
"java.io.Writer" -> "java.io.IOException";
"java.io.Writer" -> "java.lang.Appendable";
"java.io.Writer" -> "java.lang.CharSequence";
"java.io.Writer" -> "java.lang.Object";
"java.io.Writer" -> "java.lang.String";
"java.lang.AbstractStringBuilder" -> "java.io.IOException";
"java.lang.AbstractStringBuilder" -> "java.lang.Appendable";
"java.lang.AbstractStringBuilder" -> "java.lang.CharSequence";
"java.lang.AbstractStringBuilder" -> "java.lang.Object";
"java.lang.AbstractStringBuilder" -> "java.lang.String";
"java.lang.AbstractStringBuilder" -> "java.lang.StringBuffer";
"java.lang.annotation.Annotation" -> "java.lang.Class";
"java.lang.annotation.Annotation" -> "java.lang.Object";
"java.lang.annotation.Annotation" -> "java.lang.String";
"java.lang.annotation.RetentionPolicy" -> "java.lang.Enum";
"java.lang.annotation.RetentionPolicy" -> "java.lang.String";
"java.lang.Appendable" -> "java.io.IOException";
"java.lang.Appendable" -> "java.lang.CharSequence";
"java.lang.Appendable" -> "java.lang.Object";
"java.lang.AssertionStatusDirectives" -> "java.lang.Object";
"java.lang.CharSequence" -> "java.lang.Object";
"java.lang.CharSequence" -> "java.lang.String";
"java.lang.ClassFormatError" -> "java.lang.LinkageError";
"java.lang.ClassFormatError" -> "java.lang.String";
"java.lang.Class" -> "java.io.InputStream";
"java.lang.Class" -> "java.io.Serializable";
"java.lang.Class" -> "java.lang.annotation.Annotation";
"java.lang.Class" -> "java.lang.ClassLoader";
"java.lang.Class" -> "java.lang.ClassNotFoundException";
"java.lang.Class" -> "java.lang.IllegalAccessException";
"java.lang.Class" -> "java.lang.InstantiationException";
"java.lang.Class" -> "java.lang.NoSuchFieldException";
"java.lang.Class" -> "java.lang.NoSuchMethodException";
"java.lang.Class" -> "java.lang.Object";
"java.lang.Class" -> "java.lang.Package";
"java.lang.Class" -> "java.lang.reflect.AnnotatedElement";
"java.lang.Class" -> "java.lang.reflect.Constructor";
"java.lang.Class" -> "java.lang.reflect.Field";
"java.lang.Class" -> "java.lang.reflect.GenericDeclaration";
"java.lang.Class" -> "java.lang.reflect.Method";
"java.lang.Class" -> "java.lang.reflect.Type";
"java.lang.Class" -> "java.lang.SecurityException";
"java.lang.Class" -> "java.lang.String";
"java.lang.Class" -> "java.net.URL";
"java.lang.Class" -> "java.security.ProtectionDomain";
"java.lang.Class" -> "java.util.Collection";
"java.lang.Class" -> "java.util.Map";
"java.lang.Class" -> "java.util.Set";
"java.lang.ClassLoader" -> "java.io.File";
"java.lang.ClassLoader" -> "java.io.InputStream";
"java.lang.ClassLoader" -> "java.io.IOException";
"java.lang.ClassLoader" -> "java.lang.AssertionStatusDirectives";
"java.lang.ClassLoader" -> "java.lang.Class";
"java.lang.ClassLoader" -> "java.lang.ClassFormatError";
"java.lang.ClassLoader" -> "java.lang.ClassNotFoundException";
"java.lang.ClassLoader" -> "java.lang.IllegalArgumentException";
"java.lang.ClassLoader" -> "java.lang.Object";
"java.lang.ClassLoader" -> "java.lang.Package";
"java.lang.ClassLoader" -> "java.lang.String";
"java.lang.ClassLoader" -> "java.lang.Void";
"java.lang.ClassLoader" -> "java.net.URL";
"java.lang.ClassLoader" -> "java.nio.ByteBuffer";
"java.lang.ClassLoader" -> "java.security.CodeSource";
"java.lang.ClassLoader" -> "java.security.ProtectionDomain";
"java.lang.ClassLoader" -> "java.util.Enumeration";
"java.lang.ClassLoader" -> "java.util.Stack";
"java.lang.ClassLoader" -> "java.util.Vector";
"java.lang.ClassLoader" -> "sun.misc.URLClassPath";
"java.lang.ClassNotFoundException" -> "java.lang.Exception";
"java.lang.ClassNotFoundException" -> "java.lang.String";
"java.lang.ClassNotFoundException" -> "java.lang.Throwable";
"java.lang.Class" -> "sun.reflect.annotation.AnnotationType";
"java.lang.Class" -> "sun.reflect.ConstantPool";
"java.lang.Class" -> "sun.reflect.generics.factory.GenericsFactory";
"java.lang.Class" -> "sun.reflect.generics.repository.ClassRepository";
"java.lang.Class" -> "sun.reflect.ReflectionFactory";
"java.lang.Cloneable" -> "java.lang.Object";
"java.lang.CloneNotSupportedException" -> "java.lang.Exception";
"java.lang.CloneNotSupportedException" -> "java.lang.String";
"java.lang.Comparable" -> "java.lang.Object";
"java.lang.Enum" -> "java.io.IOException";
"java.lang.Enum" -> "java.io.ObjectInputStream";
"java.lang.Enum" -> "java.io.ObjectStreamException";
"java.lang.Enum" -> "java.io.Serializable";
"java.lang.Enum" -> "java.lang.Class";
"java.lang.Enum" -> "java.lang.ClassNotFoundException";
"java.lang.Enum" -> "java.lang.CloneNotSupportedException";
"java.lang.Enum" -> "java.lang.Comparable";
"java.lang.Enum" -> "java.lang.Object";
"java.lang.Enum" -> "java.lang.String";
"java.lang.Error" -> "java.lang.String";
"java.lang.Error" -> "java.lang.Throwable";
"java.lang.Exception" -> "java.lang.String";
"java.lang.Exception" -> "java.lang.Throwable";
"java.lang.IllegalAccessException" -> "java.lang.Exception";
"java.lang.IllegalAccessException" -> "java.lang.String";
"java.lang.IllegalArgumentException" -> "java.lang.RuntimeException";
"java.lang.IllegalArgumentException" -> "java.lang.String";
"java.lang.IllegalArgumentException" -> "java.lang.Throwable";
"java.lang.InstantiationException" -> "java.lang.Exception";
"java.lang.InstantiationException" -> "java.lang.String";
"java.lang.InterruptedException" -> "java.lang.Exception";
"java.lang.InterruptedException" -> "java.lang.String";
"java.lang.Iterable" -> "java.lang.Object";
"java.lang.Iterable" -> "java.util.Iterator";
"java.lang.LinkageError" -> "java.lang.Error";
"java.lang.LinkageError" -> "java.lang.String";
"java.lang.Long" -> "java.lang.Comparable";
"java.lang.Long" -> "java.lang.Number";
"java.lang.Long" -> "java.lang.NumberFormatException";
"java.lang.Long" -> "java.lang.Object";
"java.lang.Long" -> "java.lang.String";
"java.lang.NoSuchFieldException" -> "java.lang.Exception";
"java.lang.NoSuchFieldException" -> "java.lang.String";
"java.lang.NoSuchMethodException" -> "java.lang.Exception";
"java.lang.NoSuchMethodException" -> "java.lang.String";
"java.lang.NumberFormatException" -> "java.lang.IllegalArgumentException";
"java.lang.NumberFormatException" -> "java.lang.String";
"java.lang.Number" -> "java.io.Serializable";
"java.lang.Number" -> "java.lang.Object";
"java.lang.Object" -> "java.lang.Class";
"java.lang.Object" -> "java.lang.CloneNotSupportedException";
"java.lang.Object" -> "java.lang.InterruptedException";
"java.lang.Object" -> "java.lang.String";
"java.lang.Object" -> "java.lang.Throwable";
"java.lang.Package" -> "java.lang.annotation.Annotation";
"java.lang.Package" -> "java.lang.Class";
"java.lang.Package" -> "java.lang.ClassLoader";
"java.lang.Package" -> "java.lang.NumberFormatException";
"java.lang.Package" -> "java.lang.Object";
"java.lang.Package" -> "java.lang.reflect.AnnotatedElement";
"java.lang.Package" -> "java.lang.String";
"java.lang.Package" -> "java.net.URL";
"java.lang.Package" -> "java.util.jar.Manifest";
"java.lang.Package" -> "java.util.Map";
"java.lang.Readable" -> "java.io.IOException";
"java.lang.Readable" -> "java.lang.Object";
"java.lang.Readable" -> "java.nio.CharBuffer";
"java.lang.reflect.AccessibleObject" -> "java.lang.annotation.Annotation";
"java.lang.reflect.AccessibleObject" -> "java.lang.Class";
"java.lang.reflect.AccessibleObject" -> "java.lang.Object";
"java.lang.reflect.AccessibleObject" -> "java.lang.reflect.AnnotatedElement";
"java.lang.reflect.AccessibleObject" -> "java.lang.SecurityException";
"java.lang.reflect.AnnotatedElement" -> "java.lang.annotation.Annotation";
"java.lang.reflect.AnnotatedElement" -> "java.lang.Class";
"java.lang.reflect.AnnotatedElement" -> "java.lang.Object";
"java.lang.reflect.Constructor" -> "java.lang.annotation.Annotation";
"java.lang.reflect.Constructor" -> "java.lang.Class";
"java.lang.reflect.Constructor" -> "java.lang.IllegalAccessException";
"java.lang.reflect.Constructor" -> "java.lang.IllegalArgumentException";
"java.lang.reflect.Constructor" -> "java.lang.InstantiationException";
"java.lang.reflect.Constructor" -> "java.lang.Object";
"java.lang.reflect.Constructor" -> "java.lang.reflect.AccessibleObject";
"java.lang.reflect.Constructor" -> "java.lang.reflect.GenericDeclaration";
"java.lang.reflect.Constructor" -> "java.lang.reflect.InvocationTargetException";
"java.lang.reflect.Constructor" -> "java.lang.reflect.Member";
"java.lang.reflect.Constructor" -> "java.lang.String";
"java.lang.reflect.Constructor" -> "java.util.Map";
"java.lang.reflect.Constructor" -> "sun.reflect.ConstructorAccessor";
"java.lang.reflect.Constructor" -> "sun.reflect.generics.factory.GenericsFactory";
"java.lang.reflect.Constructor" -> "sun.reflect.generics.repository.ConstructorRepository";
"java.lang.reflect.Field" -> "java.lang.annotation.Annotation";
"java.lang.reflect.Field" -> "java.lang.Class";
"java.lang.reflect.Field" -> "java.lang.IllegalAccessException";
"java.lang.reflect.Field" -> "java.lang.IllegalArgumentException";
"java.lang.reflect.Field" -> "java.lang.Object";
"java.lang.reflect.Field" -> "java.lang.reflect.AccessibleObject";
"java.lang.reflect.Field" -> "java.lang.reflect.Member";
"java.lang.reflect.Field" -> "java.lang.reflect.Type";
"java.lang.reflect.Field" -> "java.lang.String";
"java.lang.reflect.Field" -> "java.util.Map";
"java.lang.reflect.Field" -> "sun.reflect.FieldAccessor";
"java.lang.reflect.Field" -> "sun.reflect.generics.factory.GenericsFactory";
"java.lang.reflect.Field" -> "sun.reflect.generics.repository.FieldRepository";
"java.lang.reflect.GenericDeclaration" -> "java.lang.Object";
"java.lang.reflect.InvocationTargetException" -> "java.lang.Exception";
"java.lang.reflect.InvocationTargetException" -> "java.lang.String";
"java.lang.reflect.InvocationTargetException" -> "java.lang.Throwable";
"java.lang.reflect.Member" -> "java.lang.Class";
"java.lang.reflect.Member" -> "java.lang.Object";
"java.lang.reflect.Member" -> "java.lang.String";
"java.lang.reflect.Method" -> "java.lang.annotation.Annotation";
"java.lang.reflect.Method" -> "java.lang.Class";
"java.lang.reflect.Method" -> "java.lang.IllegalAccessException";
"java.lang.reflect.Method" -> "java.lang.IllegalArgumentException";
"java.lang.reflect.Method" -> "java.lang.Object";
"java.lang.reflect.Method" -> "java.lang.reflect.AccessibleObject";
"java.lang.reflect.Method" -> "java.lang.reflect.GenericDeclaration";
"java.lang.reflect.Method" -> "java.lang.reflect.InvocationTargetException";
"java.lang.reflect.Method" -> "java.lang.reflect.Member";
"java.lang.reflect.Method" -> "java.lang.reflect.Type";
"java.lang.reflect.Method" -> "java.lang.String";
"java.lang.reflect.Method" -> "java.util.Map";
"java.lang.reflect.Method" -> "sun.reflect.generics.factory.GenericsFactory";
"java.lang.reflect.Method" -> "sun.reflect.generics.repository.MethodRepository";
"java.lang.reflect.Method" -> "sun.reflect.MethodAccessor";
"java.lang.reflect.ParameterizedType" -> "java.lang.Object";
"java.lang.reflect.ParameterizedType" -> "java.lang.reflect.Type";
"java.lang.reflect.Type" -> "java.lang.Object";
"java.lang.reflect.TypeVariable" -> "java.lang.Object";
"java.lang.reflect.TypeVariable" -> "java.lang.reflect.GenericDeclaration";
"java.lang.reflect.TypeVariable" -> "java.lang.reflect.Type";
"java.lang.reflect.TypeVariable" -> "java.lang.String";
"java.lang.reflect.WildcardType" -> "java.lang.Object";
"java.lang.reflect.WildcardType" -> "java.lang.reflect.Type";
"java.lang.ref.Reference" -> "java.lang.Object";
"java.lang.ref.Reference" -> "java.lang.ref.ReferenceQueue";
"java.lang.ref.ReferenceQueue" -> "java.lang.IllegalArgumentException";
"java.lang.ref.ReferenceQueue" -> "java.lang.InterruptedException";
"java.lang.ref.ReferenceQueue" -> "java.lang.Object";
"java.lang.ref.ReferenceQueue" -> "java.lang.ref.Reference";
"java.lang.Runnable" -> "java.lang.Object";
"java.lang.RuntimeException" -> "java.lang.Exception";
"java.lang.RuntimeException" -> "java.lang.String";
"java.lang.RuntimeException" -> "java.lang.Throwable";
"java.lang.SecurityException" -> "java.lang.RuntimeException";
"java.lang.SecurityException" -> "java.lang.String";
"java.lang.SecurityException" -> "java.lang.Throwable";
"java.lang.SecurityManager" -> "java.io.FileDescriptor";
"java.lang.SecurityManager" -> "java.lang.Class";
"java.lang.SecurityManager" -> "java.lang.ClassLoader";
"java.lang.SecurityManager" -> "java.lang.Object";
"java.lang.SecurityManager" -> "java.lang.String";
"java.lang.SecurityManager" -> "java.lang.Thread";
"java.lang.SecurityManager" -> "java.lang.ThreadGroup";
"java.lang.SecurityManager" -> "java.net.InetAddress";
"java.lang.SecurityManager" -> "java.security.Permission";
"java.lang.StackTraceElement" -> "java.io.Serializable";
"java.lang.StackTraceElement" -> "java.lang.Object";
"java.lang.StackTraceElement" -> "java.lang.String";
"java.lang.StringBuffer" -> "java.io.IOException";
"java.lang.StringBuffer" -> "java.io.ObjectInputStream";
"java.lang.StringBuffer" -> "java.io.ObjectOutputStream";
"java.lang.StringBuffer" -> "java.io.Serializable";
"java.lang.StringBuffer" -> "java.lang.AbstractStringBuilder";
"java.lang.StringBuffer" -> "java.lang.Appendable";
"java.lang.StringBuffer" -> "java.lang.CharSequence";
"java.lang.StringBuffer" -> "java.lang.ClassNotFoundException";
"java.lang.StringBuffer" -> "java.lang.Object";
"java.lang.StringBuffer" -> "java.lang.String";
"java.lang.StringBuilder" -> "java.io.IOException";
"java.lang.StringBuilder" -> "java.io.ObjectInputStream";
"java.lang.StringBuilder" -> "java.io.ObjectOutputStream";
"java.lang.StringBuilder" -> "java.io.Serializable";
"java.lang.StringBuilder" -> "java.lang.AbstractStringBuilder";
"java.lang.StringBuilder" -> "java.lang.Appendable";
"java.lang.StringBuilder" -> "java.lang.CharSequence";
"java.lang.StringBuilder" -> "java.lang.ClassNotFoundException";
"java.lang.StringBuilder" -> "java.lang.Object";
"java.lang.StringBuilder" -> "java.lang.String";
"java.lang.StringBuilder" -> "java.lang.StringBuffer";
"java.lang.String" -> "java.io.Serializable";
"java.lang.String" -> "java.io.UnsupportedEncodingException";
"java.lang.String" -> "java.lang.CharSequence";
"java.lang.String" -> "java.lang.Comparable";
"java.lang.String" -> "java.lang.Object";
"java.lang.String" -> "java.lang.StringBuffer";
"java.lang.String" -> "java.lang.StringBuilder";
"java.lang.String" -> "java.nio.charset.Charset";
"java.lang.String" -> "java.util.Locale";
"java.lang.ThreadGroup" -> "java.io.PrintStream";
"java.lang.ThreadGroup" -> "java.lang.Object";
"java.lang.ThreadGroup" -> "java.lang.String";
"java.lang.ThreadGroup" -> "java.lang.Thread";
"java.lang.ThreadGroup" -> "java.lang.Throwable";
"java.lang.ThreadGroup" -> "java.lang.Void";
"java.lang.Thread" -> "java.lang.Class";
"java.lang.Thread" -> "java.lang.ClassLoader";
"java.lang.Thread" -> "java.lang.CloneNotSupportedException";
"java.lang.Thread" -> "java.lang.InterruptedException";
"java.lang.Thread" -> "java.lang.Object";
"java.lang.Thread" -> "java.lang.Runnable";
"java.lang.Thread" -> "java.lang.String";
"java.lang.Thread" -> "java.lang.ThreadGroup";
"java.lang.Thread" -> "java.lang.Throwable";
"java.lang.Thread" -> "java.util.Map";
"java.lang.Thread" -> "sun.nio.ch.Interruptible";
"java.lang.Throwable" -> "java.io.IOException";
"java.lang.Throwable" -> "java.io.ObjectOutputStream";
"java.lang.Throwable" -> "java.io.PrintStream";
"java.lang.Throwable" -> "java.io.PrintWriter";
"java.lang.Throwable" -> "java.io.Serializable";
"java.lang.Throwable" -> "java.lang.Object";
"java.lang.Throwable" -> "java.lang.StackTraceElement";
"java.lang.Throwable" -> "java.lang.String";
"java.lang.UnsupportedOperationException" -> "java.lang.RuntimeException";
"java.lang.UnsupportedOperationException" -> "java.lang.String";
"java.lang.UnsupportedOperationException" -> "java.lang.Throwable";
"java.lang.Void" -> "java.lang.Object";
"java.net.ContentHandlerFactory" -> "java.lang.Object";
"java.net.ContentHandlerFactory" -> "java.lang.String";
"java.net.ContentHandlerFactory" -> "java.net.ContentHandler";
"java.net.ContentHandler" -> "java.io.IOException";
"java.net.ContentHandler" -> "java.lang.Object";
"java.net.ContentHandler" -> "java.net.URLConnection";
"java.net.FileNameMap" -> "java.lang.Object";
"java.net.FileNameMap" -> "java.lang.String";
"java.net.Inet4Address" -> "java.io.ObjectStreamException";
"java.net.Inet4Address" -> "java.lang.Object";
"java.net.Inet4Address" -> "java.lang.String";
"java.net.Inet4Address" -> "java.net.InetAddress";
"java.net.InetAddress" -> "java.io.IOException";
"java.net.InetAddress" -> "java.io.ObjectInputStream";
"java.net.InetAddress" -> "java.io.ObjectOutputStream";
"java.net.InetAddress" -> "java.io.ObjectStreamException";
"java.net.InetAddress" -> "java.io.Serializable";
"java.net.InetAddress" -> "java.lang.ClassNotFoundException";
"java.net.InetAddress" -> "java.lang.Object";
"java.net.InetAddress" -> "java.lang.String";
"java.net.InetAddress" -> "java.net.NetworkInterface";
"java.net.InetAddress" -> "java.net.UnknownHostException";
"java.net.InetAddress" -> "sun.net.spi.nameservice.NameService";
"java.net.MalformedURLException" -> "java.io.IOException";
"java.net.MalformedURLException" -> "java.lang.String";
"java.net.NetworkInterface" -> "java.lang.Object";
"java.net.NetworkInterface" -> "java.lang.String";
"java.net.NetworkInterface" -> "java.net.Inet4Address";
"java.net.NetworkInterface" -> "java.net.InetAddress";
"java.net.NetworkInterface" -> "java.net.SocketException";
"java.net.NetworkInterface" -> "java.util.Enumeration";
"java.net.NetworkInterface" -> "java.util.List";
"java.net.Proxy" -> "java.lang.Object";
"java.net.Proxy" -> "java.lang.String";
"java.net.Proxy" -> "java.net.SocketAddress";
"java.net.SocketAddress" -> "java.io.Serializable";
"java.net.SocketAddress" -> "java.lang.Object";
"java.net.SocketException" -> "java.io.IOException";
"java.net.SocketException" -> "java.lang.String";
"java.net.UnknownHostException" -> "java.io.IOException";
"java.net.UnknownHostException" -> "java.lang.String";
"java.net.UnknownServiceException" -> "java.io.IOException";
"java.net.UnknownServiceException" -> "java.lang.String";
"java.net.URI" -> "java.io.IOException";
"java.net.URI" -> "java.io.ObjectInputStream";
"java.net.URI" -> "java.io.ObjectOutputStream";
"java.net.URI" -> "java.io.Serializable";
"java.net.URI" -> "java.lang.ClassNotFoundException";
"java.net.URI" -> "java.lang.Comparable";
"java.net.URI" -> "java.lang.Object";
"java.net.URI" -> "java.lang.String";
"java.net.URI" -> "java.lang.StringBuffer";
"java.net.URI" -> "java.net.MalformedURLException";
"java.net.URI" -> "java.net.URISyntaxException";
"java.net.URI" -> "java.net.URL";
"java.net.URISyntaxException" -> "java.lang.Exception";
"java.net.URISyntaxException" -> "java.lang.String";
"java.net.URLConnection" -> "java.io.InputStream";
"java.net.URLConnection" -> "java.io.IOException";
"java.net.URLConnection" -> "java.io.OutputStream";
"java.net.URLConnection" -> "java.lang.ClassNotFoundException";
"java.net.URLConnection" -> "java.lang.IllegalAccessException";
"java.net.URLConnection" -> "java.lang.InstantiationException";
"java.net.URLConnection" -> "java.lang.Object";
"java.net.URLConnection" -> "java.lang.String";
"java.net.URLConnection" -> "java.net.ContentHandler";
"java.net.URLConnection" -> "java.net.ContentHandlerFactory";
"java.net.URLConnection" -> "java.net.FileNameMap";
"java.net.URLConnection" -> "java.net.UnknownServiceException";
"java.net.URLConnection" -> "java.net.URL";
"java.net.URLConnection" -> "java.security.Permission";
"java.net.URLConnection" -> "java.util.Map";
"java.net.URL" -> "java.io.InputStream";
"java.net.URL" -> "java.io.IOException";
"java.net.URL" -> "java.io.ObjectInputStream";
"java.net.URL" -> "java.io.ObjectOutputStream";
"java.net.URL" -> "java.io.Serializable";
"java.net.URL" -> "java.lang.ClassNotFoundException";
"java.net.URL" -> "java.lang.Object";
"java.net.URL" -> "java.lang.SecurityManager";
"java.net.URL" -> "java.lang.String";
"java.net.URL" -> "java.net.MalformedURLException";
"java.net.URL" -> "java.net.Proxy";
"java.net.URL" -> "java.net.URI";
"java.net.URL" -> "java.net.URISyntaxException";
"java.net.URL" -> "java.net.URLConnection";
"java.net.URL" -> "java.net.URLStreamHandler";
"java.net.URL" -> "java.net.URLStreamHandlerFactory";
"java.net.URLStreamHandlerFactory" -> "java.lang.Object";
"java.net.URLStreamHandlerFactory" -> "java.lang.String";
"java.net.URLStreamHandlerFactory" -> "java.net.URLStreamHandler";
"java.net.URLStreamHandler" -> "java.io.IOException";
"java.net.URLStreamHandler" -> "java.lang.Object";
"java.net.URLStreamHandler" -> "java.lang.String";
"java.net.URLStreamHandler" -> "java.net.InetAddress";
"java.net.URLStreamHandler" -> "java.net.Proxy";
"java.net.URLStreamHandler" -> "java.net.URL";
"java.net.URLStreamHandler" -> "java.net.URLConnection";
"java.nio.Buffer" -> "java.lang.Object";
"java.nio.ByteBuffer" -> "java.lang.Comparable";
"java.nio.ByteBuffer" -> "java.lang.Object";
"java.nio.ByteBuffer" -> "java.lang.String";
"java.nio.ByteBuffer" -> "java.nio.Buffer";
"java.nio.ByteBuffer" -> "java.nio.ByteOrder";
"java.nio.ByteBuffer" -> "java.nio.CharBuffer";
"java.nio.ByteBuffer" -> "java.nio.DoubleBuffer";
"java.nio.ByteBuffer" -> "java.nio.FloatBuffer";
"java.nio.ByteBuffer" -> "java.nio.IntBuffer";
"java.nio.ByteBuffer" -> "java.nio.LongBuffer";
"java.nio.ByteBuffer" -> "java.nio.ShortBuffer";
"java.nio.ByteOrder" -> "java.lang.Object";
"java.nio.ByteOrder" -> "java.lang.String";
"java.nio.CharBuffer" -> "java.io.IOException";
"java.nio.CharBuffer" -> "java.lang.Appendable";
"java.nio.CharBuffer" -> "java.lang.CharSequence";
"java.nio.CharBuffer" -> "java.lang.Comparable";
"java.nio.CharBuffer" -> "java.lang.Object";
"java.nio.CharBuffer" -> "java.lang.Readable";
"java.nio.CharBuffer" -> "java.lang.String";
"java.nio.CharBuffer" -> "java.nio.Buffer";
"java.nio.CharBuffer" -> "java.nio.ByteOrder";
"java.nio.charset.CharacterCodingException" -> "java.io.IOException";
"java.nio.charset.CharsetDecoder" -> "java.lang.Object";
"java.nio.charset.CharsetDecoder" -> "java.lang.String";
"java.nio.charset.CharsetDecoder" -> "java.nio.ByteBuffer";
"java.nio.charset.CharsetDecoder" -> "java.nio.CharBuffer";
"java.nio.charset.CharsetDecoder" -> "java.nio.charset.CharacterCodingException";
"java.nio.charset.CharsetDecoder" -> "java.nio.charset.Charset";
"java.nio.charset.CharsetDecoder" -> "java.nio.charset.CoderResult";
"java.nio.charset.CharsetDecoder" -> "java.nio.charset.CodingErrorAction";
"java.nio.charset.CharsetEncoder" -> "java.lang.CharSequence";
"java.nio.charset.CharsetEncoder" -> "java.lang.Object";
"java.nio.charset.CharsetEncoder" -> "java.nio.ByteBuffer";
"java.nio.charset.CharsetEncoder" -> "java.nio.CharBuffer";
"java.nio.charset.CharsetEncoder" -> "java.nio.charset.CharacterCodingException";
"java.nio.charset.CharsetEncoder" -> "java.nio.charset.Charset";
"java.nio.charset.CharsetEncoder" -> "java.nio.charset.CoderResult";
"java.nio.charset.CharsetEncoder" -> "java.nio.charset.CodingErrorAction";
"java.nio.charset.Charset" -> "java.lang.Comparable";
"java.nio.charset.Charset" -> "java.lang.Object";
"java.nio.charset.Charset" -> "java.lang.String";
"java.nio.charset.Charset" -> "java.nio.ByteBuffer";
"java.nio.charset.Charset" -> "java.nio.CharBuffer";
"java.nio.charset.Charset" -> "java.nio.charset.CharsetDecoder";
"java.nio.charset.Charset" -> "java.nio.charset.CharsetEncoder";
"java.nio.charset.Charset" -> "java.nio.charset.spi.CharsetProvider";
"java.nio.charset.Charset" -> "java.util.Iterator";
"java.nio.charset.Charset" -> "java.util.Locale";
"java.nio.charset.Charset" -> "java.util.Map";
"java.nio.charset.Charset" -> "java.util.Set";
"java.nio.charset.Charset" -> "java.util.SortedMap";
"java.nio.charset.CoderResult" -> "java.lang.Object";
"java.nio.charset.CoderResult" -> "java.lang.String";
"java.nio.charset.CoderResult" -> "java.nio.charset.CharacterCodingException";
"java.nio.charset.CodingErrorAction" -> "java.lang.Object";
"java.nio.charset.CodingErrorAction" -> "java.lang.String";
"java.nio.charset.spi.CharsetProvider" -> "java.lang.Object";
"java.nio.charset.spi.CharsetProvider" -> "java.lang.String";
"java.nio.charset.spi.CharsetProvider" -> "java.nio.charset.Charset";
"java.nio.charset.spi.CharsetProvider" -> "java.util.Iterator";
"java.nio.DoubleBuffer" -> "java.lang.Comparable";
"java.nio.DoubleBuffer" -> "java.lang.Object";
"java.nio.DoubleBuffer" -> "java.lang.String";
"java.nio.DoubleBuffer" -> "java.nio.Buffer";
"java.nio.DoubleBuffer" -> "java.nio.ByteOrder";
"java.nio.FloatBuffer" -> "java.lang.Comparable";
"java.nio.FloatBuffer" -> "java.lang.Object";
"java.nio.FloatBuffer" -> "java.lang.String";
"java.nio.FloatBuffer" -> "java.nio.Buffer";
"java.nio.FloatBuffer" -> "java.nio.ByteOrder";
"java.nio.IntBuffer" -> "java.lang.Comparable";
"java.nio.IntBuffer" -> "java.lang.Object";
"java.nio.IntBuffer" -> "java.lang.String";
"java.nio.IntBuffer" -> "java.nio.Buffer";
"java.nio.IntBuffer" -> "java.nio.ByteOrder";
"java.nio.LongBuffer" -> "java.lang.Comparable";
"java.nio.LongBuffer" -> "java.lang.Object";
"java.nio.LongBuffer" -> "java.lang.String";
"java.nio.LongBuffer" -> "java.nio.Buffer";
"java.nio.LongBuffer" -> "java.nio.ByteOrder";
"java.nio.ShortBuffer" -> "java.lang.Comparable";
"java.nio.ShortBuffer" -> "java.lang.Object";
"java.nio.ShortBuffer" -> "java.lang.String";
"java.nio.ShortBuffer" -> "java.nio.Buffer";
"java.nio.ShortBuffer" -> "java.nio.ByteOrder";
"java.security.CodeSource" -> "java.io.IOException";
"java.security.CodeSource" -> "java.io.ObjectInputStream";
"java.security.CodeSource" -> "java.io.ObjectOutputStream";
"java.security.CodeSource" -> "java.io.Serializable";
"java.security.CodeSource" -> "java.lang.ClassNotFoundException";
"java.security.CodeSource" -> "java.lang.Object";
"java.security.CodeSource" -> "java.lang.String";
"java.security.CodeSource" -> "java.net.URL";
"java.security.Guard" -> "java.lang.Object";
"java.security.Guard" -> "java.lang.SecurityException";
"java.security.PermissionCollection" -> "java.io.Serializable";
"java.security.PermissionCollection" -> "java.lang.Object";
"java.security.PermissionCollection" -> "java.lang.String";
"java.security.PermissionCollection" -> "java.security.Permission";
"java.security.PermissionCollection" -> "java.util.Enumeration";
"java.security.Permission" -> "java.io.Serializable";
"java.security.Permission" -> "java.lang.Object";
"java.security.Permission" -> "java.lang.SecurityException";
"java.security.Permission" -> "java.lang.String";
"java.security.Permission" -> "java.security.Guard";
"java.security.Permission" -> "java.security.PermissionCollection";
"java.security.PrivilegedAction" -> "java.lang.Object";
"java.security.ProtectionDomain" -> "java.lang.ClassLoader";
"java.security.ProtectionDomain" -> "java.lang.Object";
"java.security.ProtectionDomain" -> "java.lang.String";
"java.security.ProtectionDomain" -> "java.security.CodeSource";
"java.security.ProtectionDomain" -> "java.security.Permission";
"java.security.ProtectionDomain" -> "java.security.PermissionCollection";
"java.text.AttributedCharacterIterator" -> "java.lang.Object";
"java.text.AttributedCharacterIterator" -> "java.text.CharacterIterator";
"java.text.AttributedCharacterIterator" -> "java.util.Map";
"java.text.AttributedCharacterIterator" -> "java.util.Set";
"java.text.CharacterIterator" -> "java.lang.Cloneable";
"java.text.CharacterIterator" -> "java.lang.Object";
"java.text.FieldPosition" -> "java.lang.Object";
"java.text.FieldPosition" -> "java.lang.String";
"java.text.Format" -> "java.io.Serializable";
"java.text.Format" -> "java.lang.Cloneable";
"java.text.Format" -> "java.lang.Object";
"java.text.Format" -> "java.lang.String";
"java.text.Format" -> "java.lang.StringBuffer";
"java.text.Format" -> "java.text.AttributedCharacterIterator";
"java.text.Format" -> "java.text.FieldPosition";
"java.text.Format" -> "java.text.ParseException";
"java.text.Format" -> "java.text.ParsePosition";
"java.text.MessageFormat" -> "java.io.IOException";
"java.text.MessageFormat" -> "java.io.ObjectInputStream";
"java.text.MessageFormat" -> "java.lang.ClassNotFoundException";
"java.text.MessageFormat" -> "java.lang.Object";
"java.text.MessageFormat" -> "java.lang.String";
"java.text.MessageFormat" -> "java.lang.StringBuffer";
"java.text.MessageFormat" -> "java.text.AttributedCharacterIterator";
"java.text.MessageFormat" -> "java.text.CharacterIterator";
"java.text.MessageFormat" -> "java.text.FieldPosition";
"java.text.MessageFormat" -> "java.text.Format";
"java.text.MessageFormat" -> "java.text.ParseException";
"java.text.MessageFormat" -> "java.text.ParsePosition";
"java.text.MessageFormat" -> "java.util.List";
"java.text.MessageFormat" -> "java.util.Locale";
"java.text.ParseException" -> "java.lang.Exception";
"java.text.ParseException" -> "java.lang.String";
"java.text.ParsePosition" -> "java.lang.Object";
"java.text.ParsePosition" -> "java.lang.String";
"java.util.AbstractCollection" -> "java.lang.Object";
"java.util.AbstractCollection" -> "java.lang.String";
"java.util.AbstractCollection" -> "java.util.Collection";
"java.util.AbstractCollection" -> "java.util.Iterator";
"java.util.AbstractList" -> "java.lang.Object";
"java.util.AbstractList" -> "java.util.AbstractCollection";
"java.util.AbstractList" -> "java.util.Collection";
"java.util.AbstractList" -> "java.util.Iterator";
"java.util.AbstractList" -> "java.util.List";
"java.util.AbstractList" -> "java.util.ListIterator";
"java.util.Collection" -> "java.lang.Iterable";
"java.util.Collection" -> "java.lang.Object";
"java.util.Collection" -> "java.util.Iterator";
"java.util.Comparator" -> "java.lang.Object";
"java.util.concurrent.ConcurrentMap" -> "java.lang.Object";
"java.util.concurrent.ConcurrentMap" -> "java.util.Map";
"java.util.Enumeration" -> "java.lang.Object";
"java.util.Iterator" -> "java.lang.Object";
"java.util.jar.Attributes" -> "java.io.DataOutputStream";
"java.util.jar.Attributes" -> "java.io.IOException";
"java.util.jar.Attributes" -> "java.lang.Cloneable";
"java.util.jar.Attributes" -> "java.lang.Object";
"java.util.jar.Attributes" -> "java.lang.String";
"java.util.jar.Attributes" -> "java.util.Collection";
"java.util.jar.Attributes" -> "java.util.Map";
"java.util.jar.Attributes" -> "java.util.Set";
"java.util.jar.Manifest" -> "java.io.InputStream";
"java.util.jar.Manifest" -> "java.io.IOException";
"java.util.jar.Manifest" -> "java.io.OutputStream";
"java.util.jar.Manifest" -> "java.lang.Cloneable";
"java.util.jar.Manifest" -> "java.lang.Object";
"java.util.jar.Manifest" -> "java.lang.String";
"java.util.jar.Manifest" -> "java.lang.StringBuffer";
"java.util.jar.Manifest" -> "java.util.jar.Attributes";
"java.util.jar.Manifest" -> "java.util.Map";
"java.util.ListIterator" -> "java.lang.Object";
"java.util.ListIterator" -> "java.util.Iterator";
"java.util.List" -> "java.lang.Object";
"java.util.List" -> "java.util.Collection";
"java.util.List" -> "java.util.Iterator";
"java.util.List" -> "java.util.ListIterator";
"java.util.Locale" -> "java.io.ObjectStreamException";
"java.util.Locale" -> "java.io.Serializable";
"java.util.Locale" -> "java.lang.Cloneable";
"java.util.Locale" -> "java.lang.Object";
"java.util.Locale" -> "java.lang.String";
"java.util.Locale" -> "java.text.MessageFormat";
"java.util.Locale" -> "java.util.MissingResourceException";
"java.util.Locale" -> "sun.util.resources.OpenListResourceBundle";
"java.util.Map" -> "java.lang.Object";
"java.util.Map" -> "java.util.Collection";
"java.util.Map" -> "java.util.Set";
"java.util.MissingResourceException" -> "java.lang.RuntimeException";
"java.util.MissingResourceException" -> "java.lang.String";
"java.util.MissingResourceException" -> "java.lang.Throwable";
"java.util.RandomAccess" -> "java.lang.Object";
"java.util.ResourceBundle" -> "java.lang.ClassLoader";
"java.util.ResourceBundle" -> "java.lang.Object";
"java.util.ResourceBundle" -> "java.lang.ref.ReferenceQueue";
"java.util.ResourceBundle" -> "java.lang.String";
"java.util.ResourceBundle" -> "java.lang.Throwable";
"java.util.ResourceBundle" -> "java.util.Enumeration";
"java.util.ResourceBundle" -> "java.util.List";
"java.util.ResourceBundle" -> "java.util.Locale";
"java.util.ResourceBundle" -> "java.util.Set";
"java.util.Set" -> "java.lang.Object";
"java.util.Set" -> "java.util.Collection";
"java.util.Set" -> "java.util.Iterator";
"java.util.SortedMap" -> "java.lang.Object";
"java.util.SortedMap" -> "java.util.Collection";
"java.util.SortedMap" -> "java.util.Comparator";
"java.util.SortedMap" -> "java.util.Map";
"java.util.SortedMap" -> "java.util.Set";
"java.util.Stack" -> "java.lang.Object";
"java.util.Stack" -> "java.util.Vector";
"java.util.Vector" -> "java.io.IOException";
"java.util.Vector" -> "java.io.ObjectOutputStream";
"java.util.Vector" -> "java.io.Serializable";
"java.util.Vector" -> "java.lang.Cloneable";
"java.util.Vector" -> "java.lang.Object";
"java.util.Vector" -> "java.lang.String";
"java.util.Vector" -> "java.util.AbstractList";
"java.util.Vector" -> "java.util.Collection";
"java.util.Vector" -> "java.util.Enumeration";
"java.util.Vector" -> "java.util.List";
"java.util.Vector" -> "java.util.RandomAccess";
"sun.misc.Resource" -> "java.io.InputStream";
"sun.misc.Resource" -> "java.io.IOException";
"sun.misc.Resource" -> "java.lang.Object";
"sun.misc.Resource" -> "java.lang.String";
"sun.misc.Resource" -> "java.net.URL";
"sun.misc.Resource" -> "java.nio.ByteBuffer";
"sun.misc.Resource" -> "java.util.jar.Manifest";
"sun.misc.URLClassPath" -> "java.io.IOException";
"sun.misc.URLClassPath" -> "java.lang.Object";
"sun.misc.URLClassPath" -> "java.lang.String";
"sun.misc.URLClassPath" -> "java.net.URL";
"sun.misc.URLClassPath" -> "java.net.URLStreamHandler";
"sun.misc.URLClassPath" -> "java.net.URLStreamHandlerFactory";
"sun.misc.URLClassPath" -> "java.util.Enumeration";
"sun.misc.URLClassPath" -> "sun.misc.Resource";
"sun.net.spi.nameservice.NameService" -> "java.lang.Object";
"sun.net.spi.nameservice.NameService" -> "java.lang.String";
"sun.net.spi.nameservice.NameService" -> "java.net.UnknownHostException";
"sun.nio.ch.Interruptible" -> "java.lang.Object";
"sun.reflect.annotation.AnnotationType" -> "java.lang.annotation.RetentionPolicy";
"sun.reflect.annotation.AnnotationType" -> "java.lang.Class";
"sun.reflect.annotation.AnnotationType" -> "java.lang.Object";
"sun.reflect.annotation.AnnotationType" -> "java.lang.String";
"sun.reflect.annotation.AnnotationType" -> "java.util.Map";
"sun.reflect.ConstantPool" -> "java.lang.Class";
"sun.reflect.ConstantPool" -> "java.lang.Object";
"sun.reflect.ConstantPool" -> "java.lang.reflect.Field";
"sun.reflect.ConstantPool" -> "java.lang.reflect.Member";
"sun.reflect.ConstantPool" -> "java.lang.String";
"sun.reflect.ConstructorAccessor" -> "java.lang.IllegalArgumentException";
"sun.reflect.ConstructorAccessor" -> "java.lang.InstantiationException";
"sun.reflect.ConstructorAccessor" -> "java.lang.Object";
"sun.reflect.ConstructorAccessor" -> "java.lang.reflect.InvocationTargetException";
"sun.reflect.FieldAccessor" -> "java.lang.IllegalAccessException";
"sun.reflect.FieldAccessor" -> "java.lang.IllegalArgumentException";
"sun.reflect.FieldAccessor" -> "java.lang.Object";
"sun.reflect.generics.factory.GenericsFactory" -> "java.lang.Object";
"sun.reflect.generics.factory.GenericsFactory" -> "java.lang.reflect.ParameterizedType";
"sun.reflect.generics.factory.GenericsFactory" -> "java.lang.reflect.Type";
"sun.reflect.generics.factory.GenericsFactory" -> "java.lang.reflect.TypeVariable";
"sun.reflect.generics.factory.GenericsFactory" -> "java.lang.reflect.WildcardType";
"sun.reflect.generics.factory.GenericsFactory" -> "java.lang.String";
"sun.reflect.generics.repository.AbstractRepository" -> "java.lang.Object";
"sun.reflect.generics.repository.AbstractRepository" -> "java.lang.String";
"sun.reflect.generics.repository.AbstractRepository" -> "sun.reflect.generics.factory.GenericsFactory";
"sun.reflect.generics.repository.AbstractRepository" -> "sun.reflect.generics.tree.Tree";
"sun.reflect.generics.repository.AbstractRepository" -> "sun.reflect.generics.visitor.Reifier";
"sun.reflect.generics.repository.ClassRepository" -> "java.lang.reflect.Type";
"sun.reflect.generics.repository.ClassRepository" -> "java.lang.String";
"sun.reflect.generics.repository.ClassRepository" -> "sun.reflect.generics.factory.GenericsFactory";
"sun.reflect.generics.repository.ClassRepository" -> "sun.reflect.generics.repository.GenericDeclRepository";
"sun.reflect.generics.repository.ClassRepository" -> "sun.reflect.generics.tree.ClassSignature";
"sun.reflect.generics.repository.ClassRepository" -> "sun.reflect.generics.tree.Tree";
"sun.reflect.generics.repository.ConstructorRepository" -> "java.lang.String";
"sun.reflect.generics.repository.ConstructorRepository" -> "sun.reflect.generics.factory.GenericsFactory";
"sun.reflect.generics.repository.ConstructorRepository" -> "sun.reflect.generics.repository.GenericDeclRepository";
"sun.reflect.generics.repository.ConstructorRepository" -> "sun.reflect.generics.tree.MethodTypeSignature";
"sun.reflect.generics.repository.ConstructorRepository" -> "sun.reflect.generics.tree.Tree";
"sun.reflect.generics.repository.FieldRepository" -> "java.lang.reflect.Type";
"sun.reflect.generics.repository.FieldRepository" -> "java.lang.String";
"sun.reflect.generics.repository.FieldRepository" -> "sun.reflect.generics.factory.GenericsFactory";
"sun.reflect.generics.repository.FieldRepository" -> "sun.reflect.generics.repository.AbstractRepository";
"sun.reflect.generics.repository.FieldRepository" -> "sun.reflect.generics.tree.Tree";
"sun.reflect.generics.repository.FieldRepository" -> "sun.reflect.generics.tree.TypeSignature";
"sun.reflect.generics.repository.GenericDeclRepository" -> "java.lang.String";
"sun.reflect.generics.repository.GenericDeclRepository" -> "sun.reflect.generics.factory.GenericsFactory";
"sun.reflect.generics.repository.GenericDeclRepository" -> "sun.reflect.generics.repository.AbstractRepository";
"sun.reflect.generics.repository.MethodRepository" -> "java.lang.reflect.Type";
"sun.reflect.generics.repository.MethodRepository" -> "java.lang.String";
"sun.reflect.generics.repository.MethodRepository" -> "sun.reflect.generics.factory.GenericsFactory";
"sun.reflect.generics.repository.MethodRepository" -> "sun.reflect.generics.repository.ConstructorRepository";
"sun.reflect.generics.tree.ArrayTypeSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.ArrayTypeSignature" -> "sun.reflect.generics.tree.FieldTypeSignature";
"sun.reflect.generics.tree.ArrayTypeSignature" -> "sun.reflect.generics.tree.TypeSignature";
"sun.reflect.generics.tree.ArrayTypeSignature" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.tree.BaseType" -> "java.lang.Object";
"sun.reflect.generics.tree.BaseType" -> "sun.reflect.generics.tree.TypeSignature";
"sun.reflect.generics.tree.BooleanSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.BooleanSignature" -> "sun.reflect.generics.tree.BaseType";
"sun.reflect.generics.tree.BooleanSignature" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.tree.BottomSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.BottomSignature" -> "sun.reflect.generics.tree.FieldTypeSignature";
"sun.reflect.generics.tree.BottomSignature" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.tree.ByteSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.ByteSignature" -> "sun.reflect.generics.tree.BaseType";
"sun.reflect.generics.tree.ByteSignature" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.tree.CharSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.CharSignature" -> "sun.reflect.generics.tree.BaseType";
"sun.reflect.generics.tree.CharSignature" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.tree.ClassSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.ClassSignature" -> "sun.reflect.generics.tree.ClassTypeSignature";
"sun.reflect.generics.tree.ClassSignature" -> "sun.reflect.generics.tree.Signature";
"sun.reflect.generics.tree.ClassSignature" -> "sun.reflect.generics.visitor.Visitor";
"sun.reflect.generics.tree.ClassTypeSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.ClassTypeSignature" -> "java.util.List";
"sun.reflect.generics.tree.ClassTypeSignature" -> "sun.reflect.generics.tree.FieldTypeSignature";
"sun.reflect.generics.tree.ClassTypeSignature" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.tree.DoubleSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.DoubleSignature" -> "sun.reflect.generics.tree.BaseType";
"sun.reflect.generics.tree.DoubleSignature" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.tree.FieldTypeSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.FieldTypeSignature" -> "sun.reflect.generics.tree.BaseType";
"sun.reflect.generics.tree.FieldTypeSignature" -> "sun.reflect.generics.tree.TypeArgument";
"sun.reflect.generics.tree.FieldTypeSignature" -> "sun.reflect.generics.tree.TypeSignature";
"sun.reflect.generics.tree.FloatSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.FloatSignature" -> "sun.reflect.generics.tree.BaseType";
"sun.reflect.generics.tree.FloatSignature" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.tree.FormalTypeParameter" -> "java.lang.Object";
"sun.reflect.generics.tree.FormalTypeParameter" -> "java.lang.String";
"sun.reflect.generics.tree.FormalTypeParameter" -> "sun.reflect.generics.tree.TypeTree";
"sun.reflect.generics.tree.FormalTypeParameter" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.tree.IntSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.IntSignature" -> "sun.reflect.generics.tree.BaseType";
"sun.reflect.generics.tree.IntSignature" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.tree.LongSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.LongSignature" -> "sun.reflect.generics.tree.BaseType";
"sun.reflect.generics.tree.LongSignature" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.tree.MethodTypeSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.MethodTypeSignature" -> "sun.reflect.generics.tree.ReturnType";
"sun.reflect.generics.tree.MethodTypeSignature" -> "sun.reflect.generics.tree.Signature";
"sun.reflect.generics.tree.MethodTypeSignature" -> "sun.reflect.generics.visitor.Visitor";
"sun.reflect.generics.tree.ReturnType" -> "java.lang.Object";
"sun.reflect.generics.tree.ReturnType" -> "sun.reflect.generics.tree.TypeTree";
"sun.reflect.generics.tree.ShortSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.ShortSignature" -> "sun.reflect.generics.tree.BaseType";
"sun.reflect.generics.tree.ShortSignature" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.tree.Signature" -> "java.lang.Object";
"sun.reflect.generics.tree.Signature" -> "sun.reflect.generics.tree.Tree";
"sun.reflect.generics.tree.SimpleClassTypeSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.SimpleClassTypeSignature" -> "java.lang.String";
"sun.reflect.generics.tree.SimpleClassTypeSignature" -> "sun.reflect.generics.tree.FieldTypeSignature";
"sun.reflect.generics.tree.SimpleClassTypeSignature" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.tree.Tree" -> "java.lang.Object";
"sun.reflect.generics.tree.TypeArgument" -> "java.lang.Object";
"sun.reflect.generics.tree.TypeArgument" -> "sun.reflect.generics.tree.TypeTree";
"sun.reflect.generics.tree.TypeSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.TypeSignature" -> "sun.reflect.generics.tree.ReturnType";
"sun.reflect.generics.tree.TypeTree" -> "java.lang.Object";
"sun.reflect.generics.tree.TypeTree" -> "sun.reflect.generics.tree.Tree";
"sun.reflect.generics.tree.TypeTree" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.tree.TypeVariableSignature" -> "java.lang.Object";
"sun.reflect.generics.tree.TypeVariableSignature" -> "java.lang.String";
"sun.reflect.generics.tree.TypeVariableSignature" -> "sun.reflect.generics.tree.FieldTypeSignature";
"sun.reflect.generics.tree.TypeVariableSignature" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.tree.VoidDescriptor" -> "java.lang.Object";
"sun.reflect.generics.tree.VoidDescriptor" -> "sun.reflect.generics.tree.ReturnType";
"sun.reflect.generics.tree.VoidDescriptor" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.tree.Wildcard" -> "java.lang.Object";
"sun.reflect.generics.tree.Wildcard" -> "sun.reflect.generics.tree.TypeArgument";
"sun.reflect.generics.tree.Wildcard" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.visitor.Reifier" -> "java.lang.Object";
"sun.reflect.generics.visitor.Reifier" -> "java.lang.reflect.Type";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.factory.GenericsFactory";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.tree.ArrayTypeSignature";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.tree.BooleanSignature";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.tree.BottomSignature";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.tree.ByteSignature";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.tree.CharSignature";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.tree.ClassTypeSignature";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.tree.DoubleSignature";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.tree.FloatSignature";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.tree.FormalTypeParameter";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.tree.IntSignature";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.tree.LongSignature";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.tree.ShortSignature";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.tree.SimpleClassTypeSignature";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.tree.TypeVariableSignature";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.tree.VoidDescriptor";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.tree.Wildcard";
"sun.reflect.generics.visitor.Reifier" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "java.lang.Object";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "sun.reflect.generics.tree.ArrayTypeSignature";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "sun.reflect.generics.tree.BooleanSignature";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "sun.reflect.generics.tree.BottomSignature";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "sun.reflect.generics.tree.ByteSignature";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "sun.reflect.generics.tree.CharSignature";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "sun.reflect.generics.tree.ClassTypeSignature";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "sun.reflect.generics.tree.DoubleSignature";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "sun.reflect.generics.tree.FloatSignature";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "sun.reflect.generics.tree.FormalTypeParameter";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "sun.reflect.generics.tree.IntSignature";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "sun.reflect.generics.tree.LongSignature";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "sun.reflect.generics.tree.ShortSignature";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "sun.reflect.generics.tree.SimpleClassTypeSignature";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "sun.reflect.generics.tree.TypeVariableSignature";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "sun.reflect.generics.tree.VoidDescriptor";
"sun.reflect.generics.visitor.TypeTreeVisitor" -> "sun.reflect.generics.tree.Wildcard";
"sun.reflect.generics.visitor.Visitor" -> "java.lang.Object";
"sun.reflect.generics.visitor.Visitor" -> "sun.reflect.generics.tree.ClassSignature";
"sun.reflect.generics.visitor.Visitor" -> "sun.reflect.generics.tree.MethodTypeSignature";
"sun.reflect.generics.visitor.Visitor" -> "sun.reflect.generics.visitor.TypeTreeVisitor";
"sun.reflect.LangReflectAccess" -> "java.lang.Class";
"sun.reflect.LangReflectAccess" -> "java.lang.Object";
"sun.reflect.LangReflectAccess" -> "java.lang.reflect.Constructor";
"sun.reflect.LangReflectAccess" -> "java.lang.reflect.Field";
"sun.reflect.LangReflectAccess" -> "java.lang.reflect.Method";
"sun.reflect.LangReflectAccess" -> "java.lang.String";
"sun.reflect.LangReflectAccess" -> "sun.reflect.ConstructorAccessor";
"sun.reflect.LangReflectAccess" -> "sun.reflect.MethodAccessor";
"sun.reflect.MethodAccessor" -> "java.lang.IllegalArgumentException";
"sun.reflect.MethodAccessor" -> "java.lang.Object";
"sun.reflect.MethodAccessor" -> "java.lang.reflect.InvocationTargetException";
"sun.reflect.ReflectionFactory" -> "java.lang.Class";
"sun.reflect.ReflectionFactory" -> "java.lang.Object";
"sun.reflect.ReflectionFactory" -> "java.lang.reflect.Constructor";
"sun.reflect.ReflectionFactory" -> "java.lang.reflect.Field";
"sun.reflect.ReflectionFactory" -> "java.lang.reflect.Method";
"sun.reflect.ReflectionFactory" -> "java.lang.String";
"sun.reflect.ReflectionFactory" -> "sun.reflect.ConstructorAccessor";
"sun.reflect.ReflectionFactory" -> "sun.reflect.FieldAccessor";
"sun.reflect.ReflectionFactory" -> "sun.reflect.LangReflectAccess";
"sun.reflect.ReflectionFactory" -> "sun.reflect.MethodAccessor";
"sun.util.resources.OpenListResourceBundle" -> "java.lang.Object";
"sun.util.resources.OpenListResourceBundle" -> "java.lang.String";
"sun.util.resources.OpenListResourceBundle" -> "java.util.Enumeration";
"sun.util.resources.OpenListResourceBundle" -> "java.util.Map";
"sun.util.resources.OpenListResourceBundle" -> "java.util.ResourceBundle";
"sun.util.resources.OpenListResourceBundle" -> "java.util.Set";
